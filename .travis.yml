language: cpp

os:
  - linux
  - osx

osx_image: xcode9.2

env:
  global:
    - SHELL_SESSION_HISTORY=0
  matrix:
    - BUILD=Release
    - BUILD=Debug

addons:
  apt:
    packages:
      - cmake
      - cmake-data
      - python-numpy
      - python-matplotlib
      - python3-numpy
      - python3-matplotlib

compiler:
    - gcc
    - clang

before_install:
    - python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then (sleep 2;gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB||true); fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then (sleep 2;command curl -sSL https://rvm.io/mpapis.asc | gpg --import -)||(sleep 2;command curl -sSL https://rvm.io/mpapis.asc | gpg --import -)||(sleep 2;command curl -sSL https://rvm.io/mpapis.asc | gpg --import -)||true ; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then (sleep 2;rvm get stable --auto-dotfiles; sleep 2)||true; fi

before_script:
    - set -e
    - cmake --version
    - python --version
    - python -c 'import numpy' 2>/dev/null || pip install numpy
    - python -c 'import numpy; print numpy.__version__'
    - if [[ x$(which python3 >& /dev/null&&echo 1||echo 0) == x0 ]]; then echo 'WARNING python3 not found so python3 commands will do nothing!'; mkdir fakepy3; echo true > fakepy3/python3; chmod +x fakepy3/python3; export PATH="$PWD/fakepy3:$PATH"; fi
    - python3 --version
    - python3 -c 'import numpy' 2>/dev/null || pip install numpy
    - python3 -c 'import numpy; print(numpy.__version__)'
    - ls -l
    - mkdir build installdir rundir
    - ls -l
    - set +e
    - cd ./build/
    - ls -l
    - set -e
    - cmake .. -DBUILD_FAT=ON -DCMAKE_BUILD_TYPE=${BUILD} -DCMAKE_INSTALL_PREFIX=../installdir/
    - set +e
    - ls -l

script:
    - set -e
    - make VERBOSE=1 install
    - set +e
    - cd ../rundir/
    - ls -l
    - set -e
    - find ../installdir/
    - ../installdir/bin/mcplexample_write myfile.mcpl
    - ../installdir/bin/mcplexample_filter myfile.mcpl.gz myfile_filtered.mcpl
    - ../installdir/bin/mcplexample_read myfile_filtered.mcpl.gz
    - ../installdir/bin/mcpltool myfile.mcpl.gz
    - ../installdir/bin/mcpltool myfile_filtered.mcpl.gz
    - ../installdir/bin/mcpltool_fat myfile_filtered.mcpl.gz
    - ../installdir/bin/mcplexample_pyread myfile.mcpl.gz
    - ../installdir/bin/pymcpltool myfile.mcpl.gz
    - ../installdir/bin/pymcpltool --stats myfile.mcpl.gz
    - python -c 'import matplotlib' 2>/dev/null || python -mpip install matplotlib
    - ../installdir/bin/pymcpltool --stats --pdf myfile.mcpl.gz
    - python3 ../installdir/bin/mcplexample_pyread myfile.mcpl.gz
    - python3 ../installdir/bin/pymcpltool myfile.mcpl.gz
    - python3 ../installdir/bin/pymcpltool --stats myfile.mcpl.gz
    - python3 -c 'import matplotlib' 2>/dev/null || python3 -mpip install matplotlib
    - rm -f mcpl.pdf
    - python3 ../installdir/bin/pymcpltool --stats --pdf myfile.mcpl.gz
    - set +e

notifications:
  email:
    recipients:
      - mcpl-developers@cern.ch
    on_success: change
    on_failure: always
